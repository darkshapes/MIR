[build-system]
requires      = ["setuptools", "setuptools-scm"]
build-backend = "setuptools.build_meta"

[project]
authors = [
    { name = "darkshapes", email = "91800957+exdysa@users.noreply.github.com" },
]
description = "Machine Intelligence Resource URI Schema Codebase"
license = { file = "LICENSE" }
name = "MIR"
readme = "README.md"
requires-python = ">= 3.11"
version = "0.0.1"
keywords = ["ML", "AI", "URI", "schema", "diffusion", "LLM", "identification"]
classifiers = [
    "Programming Language :: Python :: 3.11",
    "Programming Language :: Python :: 3.12",
    "Intended Audience :: Developers",
    "Intended Audience :: Information Technology",
    "Intended Audience :: Science/Research",
    "License :: OSI Approved :: GNU Lesser General Public License v3 (LGPLv3)",
    "Operating System :: OS Independent",
    "Topic :: Scientific/Engineering :: Artificial Intelligence",
]

dependencies = [
    "mir[mflux] ; sys_platform == 'darwin'",
    "mir[cu128] ; sys_platform != 'darwin' and python_version >='3.12'",
    "mir[cu128] ; sys_platform != 'darwin' and python_version <'3.12'",

]

[dependency-groups]
dev = [
    "pytest>=8.3.5",
    "pytest-asyncio>=1.0.0",
    "ruff>=0.11.12",
    "mir[full]",
    "nnll[nightly,mflux,dev] @ git+https://github.com/darkshapes/nnll@main ; sys_platform == 'darwin'",
    "nnll[rocm,cu126,dev] @ git+https://github.com/darkshapes/nnll@main ; sys_platform != 'darwin' and python_version <'3.12'",
    "nnll[rocm,cu128,dev] @ git+https://github.com/darkshapes/nnll@main ; sys_platform != 'darwin' and python_version >='3.12'",
]

[project.optional-dependencies]
cu128 = [
    "nnll[rocm,cu128] @ git+https://github.com/darkshapes/nnll@main ; sys_platform != 'darwin' and python_version >='3.12'",
]
cu127 = [
    "nnll[rocm,cu126] @ git+https://github.com/darkshapes/nnll@main ; sys_platform != 'darwin' and python_version <'3.12'",
]
mflux = [
    "nnll[nightly,mflux] @ git+https://github.com/darkshapes/nnll@main ; sys_platform == 'darwin'",
]
lmstudio = ["lmstudio>=1.3.1"]
ollama = ["ollama>=0.5.1"]
openai = [
    "openai>=1.84.0",
    "openai-whisper @ git+https://github.com/openai/whisper.git ; python_version >'3.12'",
    "openai-whisper @ git+https://github.com/openai/whisper.git ; python_version <='3.12'",

]
outetts = [
    "mir[openai]",
    "llvmlite>=0.44 ; python_version > '3.12'",
    "llvmlite>=0.36 ; python_version <= '3.12'",
    "outetts",
]
full = ["mir[lmstudio,ollama,outetts,hidiffusion,cu126,cu128,mflux]"]
dev = [
    "pytest>=8.3.5",
    "pytest-asyncio>=1.0.0",
    "ruff>=0.11.12",
    "mir[full]",
    "nnll[nightly,mflux,dev] @ git+https://github.com/darkshapes/nnll@main ; sys_platform == 'darwin'",
    "nnll[rocm,cu126,dev] @ git+https://github.com/darkshapes/nnll@main ; sys_platform != 'darwin' and python_version <'3.12'",
    "nnll[rocm,cu128,dev] @ git+https://github.com/darkshapes/nnll@main ; sys_platform != 'darwin' and python_version >='3.12'",
]

# vllm = ["vllm>=0.9.0.1 ; sys_platform != 'darwin'"]

# audiocraft = ["audiocraft @ git+https://github.com/exdysa/facebookresearch-audiocraft-revamp.git@x/dev"]
# bagel = ["bagel @ git+https://github.com/exdysa/ByteDance-Bagel.git"]
# orpheus_tts = ["orpheus_tts @ git+https://github.com/canopyai/Orpheus-TTS.git"]
# parler_tts = ["parler-tts @ git+https://github.com/huggingface/parler-tts.git"]
# xllmx = ["xllmx @ git+https://github.com/Alpha-VLLM/Lumina-mGPT"]
# tts = [ "mir[audiocraft, bagel, parler_tts]", "mir[audiocraft, bagel, parler_tts,vllm] ; platform_system != 'Darwin'",]

[project.urls]
Homepage      = "https://github.com/darkshapes/MIR"
Documentation = "https://github.com/darkshapes/sdbx/wiki"

[project.scripts]
mir-maid  = "mir.mir_maid:main"
mir-find  = "mir.compare_layers:main"
mir-hash  = "mir.hash256:main"
mir-add   = "mir.mir:main"
mir-parse = "mir.read_state_dict:main"

[tool.setuptools]
packages = ["mir"]


[tool.setuptools.package-data]
mir = ['mir/config/*.json']

[tool.ruff]
line-length    = 140
include        = ["*.py"]
extend-exclude = ["^tests/.*$", "test.*$"]

# [tool.ruff.format]
# exclude = ["*.py"]

[tool.pylint]
max-line-length = 140
ignore-paths    = ["^tests/.*$", "test_.*$"]
disable         = ["C0415"]

[tool.ruff.lint.pycodestyle]
max-line-length               = 140
ignore-overlong-task-comments = true

[tool.typos]
files.extend-exclude = ["^tests/.*$", "test.*$"]
default.extend-words = { "ot" = "ot" }

[tool.uv]
dev-dependencies = [
    "pytest>=8.3.5",
    "pytest-asyncio>=1.0.0",
    "ruff>=0.11.12",
    "mir[full]",
    "nnll[nightly,mflux,dev] @ git+https://github.com/darkshapes/nnll@main ; sys_platform == 'darwin'",
    "nnll[rocm,cu126,dev] @ git+https://github.com/darkshapes/nnll@main ; sys_platform != 'darwin' and python_version <'3.12'",
    "nnll[rocm,cu128,dev] @ git+https://github.com/darkshapes/nnll@main ; sys_platform != 'darwin' and python_version >='3.12'",
]

no-build-isolation-package = [
    "parler_tts",
    "audiocraft",
    "bagel",
    "xllmx",
    "orpheus_tts",
]

[tool.uv.sources]
nnll = { git = "https://github.com/darkshapes/nnll", rev = "main" }
