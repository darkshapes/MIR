[build-system]
requires      = ["setuptools", "setuptools-scm"]
build-backend = "setuptools.build_meta"

[project]
authors = [
    { name = "darkshapes", email = "91800957+exdysa@users.noreply.github.com" },
]
description = "Machine Intelligence Resource URI Schema Codebase"
license = { file = "LICENSE" }
name = "MIR"
readme = "README.md"
requires-python = ">= 3.11"
version = "0.0.1"
keywords = ["ML", "AI", "URI", "schema", "diffusion", "LLM", "identification"]
classifiers = [
    "Programming Language :: Python :: 3.11",
    "Programming Language :: Python :: 3.12",
    "Intended Audience :: Developers",
    "Intended Audience :: Information Technology",
    "Intended Audience :: Science/Research",
    "License :: OSI Approved :: GNU Lesser General Public License v3 (LGPLv3)",
    "Operating System :: OS Independent",
    "Topic :: Scientific/Engineering :: Artificial Intelligence",
]
dependencies = [
    "pydantic>=2.11.7",
    "diffusers  @ git+https://github.com/huggingface/diffusers",
    "sentencepiece ; python_version < '3.13' ",
    "sentencepiece @ git+https://github.com/google/sentencepiece.git#subdirectory=python ; python_version >= '3.13' ",
    "transformers  @ git+https://github.com/huggingface/transformers",
    "torch>=2.7.1",
]

[dependency-groups]
dev = ["pytest>=8.3.5", "pytest-mock>=3.14.1", "ruff>=0.11.12"]

[project.optional-dependencies]
cpu = ["torch", "torchvision", "torchaudio"]

mps = ["torch", "torchvision", "torchaudio"]

cu126 = [
    "torch",
    "torchvision",
    "torchaudio",
    "triton ; sys_platform == 'Linux'",
    "triton-windows ; sys_platform == 'win32'",
]

cu128 = [
    "torch",
    "torchvision",
    "torchaudio",
    "triton ; sys_platform == 'Linux'",
    "triton-windows ; sys_platform == 'win32'",
    "flash_attn ; sys_platform == 'Linux'",
    "sageattention; sys_platform != 'darwin'",
]

rocm = [
    "torch",
    "torchvision",
    "torchaudio",
    "pytorch-triton-rocm",
    "sageattention; sys_platform != 'darwin'",
    "flash_attn ; sys_platform == 'Linux'",
]

dev = ["pytest>=8.3.5", "ruff>=0.11.12", "pytest-mock>=3.14.1"]


[tool.uv]
preview = true
prerelease = "allow"
conflicts = [
    [
        { extra = "cpu" },
        { extra = "mps" },
        { extra = "cu126" },
        { extra = "cu128" },
        { extra = "rocm" },
        { extra = "attention" },

    ],
]

[tool.uv.pip]
torch-backend = "auto"

[[tool.uv.index]]
name     = "pytorch-cpu"
url      = "https://download.pytorch.org/whl/cpu"
explicit = true

[[tool.uv.index]]
name     = "pytorch-nightly"
url      = "https://download.pytorch.org/whl/nightly/cpu"
explicit = true


[[tool.uv.index]]
name     = "pytorch-cu126"
url      = "https://download.pytorch.org/whl/cu126"
explicit = true

[[tool.uv.index]]
name     = "pytorch-cu128"
url      = "https://download.pytorch.org/whl/cu128"
explicit = true

[[tool.uv.index]]
name     = "pytorch-rocm"
url      = "https://download.pytorch.org/whl/rocm6.3"
explicit = true

torch = [
    { default-index = "pytorch-cpu", extra = "cpu", marker = "sys_platform != 'darwin'" },
    { default-index = "pytorch-nightly", extra = "mps", marker = "sys_platform == 'darwin'" },
    { default-index = "pytorch-cu126", extra = "cu126", marker = "python_version < '3.12' and sys_platform == 'Linux' or sys_platform == 'win32'" },
    { default-index = "pytorch-cu128", extra = "cu128", marker = "sys_platform == 'Linux' or sys_platform == 'win32'" },
    { default-index = "pytorch-rocm", extra = "rocm", marker = "sys_platform == 'Linux'" },
]
torchvision = [
    { default-index = "pytorch-cpu", extra = "cpu", marker = "sys_platform != 'darwin'" },
    { default-index = "pytorch-nightly", extra = "mps", marker = "sys_platform == 'darwin'" },
    { default-index = "pytorch-cu126", extra = "cu126", marker = "python_version < '3.12' and sys_platform == 'Linux' or sys_platform == 'win32'" },
    { default-index = "pytorch-cu128", extra = "cu128", marker = "sys_platform == 'Linux' or sys_platform == 'win32'" },
    { default-index = "pytorch-rocm", extra = "rocm", marker = "sys_platform == 'Linux'" },
]
torchaudio = [
    { default-index = "pytorch-cpu", extra = "cpu", marker = "sys_platform != 'darwin'" },
    { default-index = "pytorch-nightly", extra = "mps", marker = "sys_platform == 'darwin'" },
    { default-index = "pytorch-cu126", extra = "cu126", marker = "python_version < '3.12' and sys_platform == 'Linux' or sys_platform == 'win32'" },
    { default-index = "pytorch-cu128", extra = "cu128", marker = "sys_platform == 'Linux' or sys_platform == 'win32'" },
    { default-index = "pytorch-rocm", extra = "rocm", marker = "sys_platform == 'Linux'" },
]

[tool.uv.sources]
diffusers     = { git = "https://github.com/huggingface/diffusers" }
sentencepiece = { git = "https://github.com/google/sentencepiece.git", subdirectory = "python", marker = "python_version >= '3.13'" }
transformers  = { git = "https://github.com/huggingface/transformers" }


[project.urls]
Homepage      = "https://github.com/darkshapes/MIR"
Documentation = "https://github.com/darkshapes/sdbx/wiki"

[project.scripts]
mir-maid = "mir.mir_maid:main"
mir-add  = "mir.mir:main"

[tool.setuptools]
packages = ["mir"]

[tool.setuptools.package-data]
mir = ['mir/config/*.json']

[tool.ruff]
line-length    = 140
include        = ["*.py"]
extend-exclude = ["^tests/.*$", "test.*$"]

# [tool.ruff.format]
# exclude = ["*.py"]

[tool.pylint]
max-line-length = 140
ignore-paths    = ["^tests/.*$", "test_.*$"]
disable         = ["C0415"]

[tool.ruff.lint.pycodestyle]
max-line-length               = 140
ignore-overlong-task-comments = true

[tool.typos]
files.extend-exclude = ["^tests/.*$", "test.*$"]
default.extend-words = { "ot" = "ot" }
